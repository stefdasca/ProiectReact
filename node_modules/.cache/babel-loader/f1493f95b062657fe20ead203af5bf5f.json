{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\Proiect React\\\\SDTutoring\\\\src\\\\projects\\\\cls\\\\ModalBox.js\";\nimport React from 'react';\nimport { Button, ModalWrapper } from './ModalStyled';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalBox = props => {\n  function random(mn, mx) {\n    return Math.random() * (mx - mn) + mn;\n  }\n\n  const {\n    isModalOpen,\n    setIsModalOpen\n  } = props;\n  const typeOfProblems = ['programare dinamica', 'siruri de caractere', 'stiva', 'APM'];\n  const sites = ['infoarena.ro', 'codeforces.com', 'pbinfo.ro'];\n  let text = \"Lucreaza o problema de \" + typeOfProblems[parseInt(random(0, typeOfProblems.length))] + \" de pe site-ul: \" + sites[parseInt(random(0, sites.length))];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n      className: isModalOpen ? 'open' : '',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal_centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal_txt\",\n            children: [\" \", text, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            children: \"Inchide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = ModalBox;\nexport default ModalBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBox\");","map":{"version":3,"names":["React","Button","ModalWrapper","useEffect","ModalBox","props","random","mn","mx","Math","isModalOpen","setIsModalOpen","typeOfProblems","sites","text","parseInt","length"],"sources":["C:/Users/Stefan/Desktop/Proiect React/SDTutoring/src/projects/cls/ModalBox.js"],"sourcesContent":["import React from 'react';\nimport { Button, ModalWrapper } from './ModalStyled';\nimport { useEffect } from 'react';\n\nconst ModalBox = (props) => {\n\n    function random(mn, mx) {\n        return Math.random() * (mx - mn) + mn;\n    }\n\n    const { isModalOpen, setIsModalOpen } = props;\n    const typeOfProblems = ['programare dinamica', 'siruri de caractere', 'stiva', 'APM'];\n    const sites = ['infoarena.ro', 'codeforces.com', 'pbinfo.ro'];\n    let text = \"Lucreaza o problema de \" + typeOfProblems[parseInt(random(0, typeOfProblems.length))] + \" de pe site-ul: \" + sites[parseInt(random(0, sites.length))];\n    return (\n        <>\n            <ModalWrapper className={isModalOpen ? 'open' : ''}>\n                <div className=\"modal_centered\">\n                    <div className=\"modal_content\">\n                        <p className=\"modal_txt\"> {text} </p>\n                        <Button\n                            type=\"button\"\n                            onClick={() => setIsModalOpen(false)}\n                        >\n                            Inchide\n                        </Button>\n                    </div>\n                </div>\n            </ModalWrapper>\n        </>\n    );\n};\n\nexport default ModalBox;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAExB,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwB;IACpB,OAAOC,IAAI,CAACH,MAAL,MAAiBE,EAAE,GAAGD,EAAtB,IAA4BA,EAAnC;EACH;;EAED,MAAM;IAAEG,WAAF;IAAeC;EAAf,IAAkCN,KAAxC;EACA,MAAMO,cAAc,GAAG,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,OAA/C,EAAwD,KAAxD,CAAvB;EACA,MAAMC,KAAK,GAAG,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,WAAnC,CAAd;EACA,IAAIC,IAAI,GAAG,4BAA4BF,cAAc,CAACG,QAAQ,CAACT,MAAM,CAAC,CAAD,EAAIM,cAAc,CAACI,MAAnB,CAAP,CAAT,CAA1C,GAAyF,kBAAzF,GAA8GH,KAAK,CAACE,QAAQ,CAACT,MAAM,CAAC,CAAD,EAAIO,KAAK,CAACG,MAAV,CAAP,CAAT,CAA9H;EACA,oBACI;IAAA,uBACI,QAAC,YAAD;MAAc,SAAS,EAAEN,WAAW,GAAG,MAAH,GAAY,EAAhD;MAAA,uBACI;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,eAAf;UAAA,wBACI;YAAG,SAAS,EAAC,WAAb;YAAA,gBAA2BI,IAA3B;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,MAAD;YACI,IAAI,EAAC,QADT;YAEI,OAAO,EAAE,MAAMH,cAAc,CAAC,KAAD,CAFjC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAiBH,CA3BD;;KAAMP,Q;AA6BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}