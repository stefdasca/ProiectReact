{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\Proiect React\\\\SDTutoring\\\\src\\\\projects\\\\tabs\\\\Tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { TabsWrapper } from './style.js';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tabs = props => {\n  _s();\n\n  const nav = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem('logged-in') == undefined) nav('/');\n  });\n  const tabsData = [{\n    id: 1,\n    title: \"DP\",\n    content: \"Programarea dinamică este o metodă de rezolvare a unor probleme de informatică în care se cere de regulă determinarea unei valori maxime sau minime, sau numărarea elementelor unei mulțimi.\"\n  }, {\n    id: 2,\n    title: \"LEE\",\n    content: \"Algoritmul lui Lee este folosit pentru determinarea ieșirii dintr-un labirint sau în alte probleme similare cu aceasta.\"\n  }, {\n    id: 3,\n    title: \"APM\",\n    content: \"Considerăm un graf neorientat ponderat (cu costuri) conex G. Se numește arbore parțial un graf parțial al lui G care este arbore. Se numește arbore parțial de cost minim un arbore parțial pentru care suma costurilor muchiilor este minimă.\"\n  }, {\n    id: 4,\n    title: \"Stive\",\n    content: \"Stiva (stack) este o structură de date liniară abstractă, pentru care sunt definite operațiile de adăugare a unui element și eliminare a unui element și aceste operații se realizează la un singur capăt al structurii, numit vârful stivei.\"\n  }, {\n    id: 5,\n    title: \"Cozi\",\n    content: \"Coada (queue) este o structură de date abstractă în care operația de adăugare se realizează la un capăt, iar cea de eliminare se realizează la celălalt capăt.\"\n  }];\n  let activeTab = props.active;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(TabsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tabsData.map(currValue => {\n            const {\n              id,\n              title\n            } = currValue;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: activeTab === id ? 'active' : '',\n              disabled: activeTab === id,\n              onClick: () => props.upd(id),\n              children: title\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs_panel\",\n          children: tabsData.map(currValue => {\n            const {\n              id,\n              content\n            } = currValue;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: activeTab === id && content\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tabs, \"9H9Cg1XZr7U6Y6AeRlg8hLZxwAo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"names":["React","useEffect","TabsWrapper","useNavigate","Tabs","props","nav","localStorage","getItem","undefined","tabsData","id","title","content","activeTab","active","map","currValue","upd"],"sources":["C:/Users/Stefan/Desktop/Proiect React/SDTutoring/src/projects/tabs/Tabs.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { TabsWrapper } from './style.js';\nimport { useNavigate } from 'react-router';\nconst Tabs = (props) => {\n\n    const nav = useNavigate();\n\n    useEffect(() => {\n      if (localStorage.getItem('logged-in') ==  undefined)\n        nav('/');\n    })\n  \n    const tabsData = [\n        {\n            id: 1,\n            title: \"DP\",\n            content: \"Programarea dinamică este o metodă de rezolvare a unor probleme de informatică în care se cere de regulă determinarea unei valori maxime sau minime, sau numărarea elementelor unei mulțimi.\",\n        },\n        {\n            id: 2,\n            title: \"LEE\",\n            content: \"Algoritmul lui Lee este folosit pentru determinarea ieșirii dintr-un labirint sau în alte probleme similare cu aceasta.\",\n        },\n        {\n            id: 3,\n            title: \"APM\",\n            content: \"Considerăm un graf neorientat ponderat (cu costuri) conex G. Se numește arbore parțial un graf parțial al lui G care este arbore. Se numește arbore parțial de cost minim un arbore parțial pentru care suma costurilor muchiilor este minimă.\",\n        },\n\n        {\n            id: 4,\n            title: \"Stive\",\n            content: \"Stiva (stack) este o structură de date liniară abstractă, pentru care sunt definite operațiile de adăugare a unui element și eliminare a unui element și aceste operații se realizează la un singur capăt al structurii, numit vârful stivei.\",\n        },\n\n        {\n            id: 5,\n            title: \"Cozi\",\n            content: \"Coada (queue) este o structură de date abstractă în care operația de adăugare se realizează la un capăt, iar cea de eliminare se realizează la celălalt capăt.\",\n        },\n    ];\n\n    let activeTab = props.active;\n    return (\n        <>\n            <section className=\"section\">\n                <TabsWrapper>\n                    <div className=\"tabs\">\n                        {\n                            tabsData.map((currValue) => {\n                                const { id, title } = currValue;\n                                return (\n                                    <button\n                                        key={id}\n                                        type=\"button\"\n                                        className={activeTab === id ? 'active' : ''}\n                                        disabled={activeTab === id}\n                                        onClick={() => props.upd(id)}\n                                    >\n                                        {title}\n                                    </button>\n                                );\n                            })\n                        }\n                    </div>\n                    <div className=\"tabs_panel\">\n                        {\n                            tabsData.map((currValue) => {\n                                const { id, content } = currValue;\n                                return (\n                                    <p key={id}>\n                                        {activeTab === id && content}\n                                    </p>\n                                );\n                            })\n                        }\n                    </div>\n                </TabsWrapper>\n            </section>\n        </>\n    );\n};\n\nexport default Tabs;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB,MAAMC,GAAG,GAAGH,WAAW,EAAvB;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAsCC,SAA1C,EACEH,GAAG,CAAC,GAAD,CAAH;EACH,CAHQ,CAAT;EAKA,MAAMI,QAAQ,GAAG,CACb;IACIC,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,IAFX;IAGIC,OAAO,EAAE;EAHb,CADa,EAMb;IACIF,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,KAFX;IAGIC,OAAO,EAAE;EAHb,CANa,EAWb;IACIF,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,KAFX;IAGIC,OAAO,EAAE;EAHb,CAXa,EAiBb;IACIF,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,OAFX;IAGIC,OAAO,EAAE;EAHb,CAjBa,EAuBb;IACIF,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,MAFX;IAGIC,OAAO,EAAE;EAHb,CAvBa,CAAjB;EA8BA,IAAIC,SAAS,GAAGT,KAAK,CAACU,MAAtB;EACA,oBACI;IAAA,uBACI;MAAS,SAAS,EAAC,SAAnB;MAAA,uBACI,QAAC,WAAD;QAAA,wBACI;UAAK,SAAS,EAAC,MAAf;UAAA,UAEQL,QAAQ,CAACM,GAAT,CAAcC,SAAD,IAAe;YACxB,MAAM;cAAEN,EAAF;cAAMC;YAAN,IAAgBK,SAAtB;YACA,oBACI;cAEI,IAAI,EAAC,QAFT;cAGI,SAAS,EAAEH,SAAS,KAAKH,EAAd,GAAmB,QAAnB,GAA8B,EAH7C;cAII,QAAQ,EAAEG,SAAS,KAAKH,EAJ5B;cAKI,OAAO,EAAE,MAAMN,KAAK,CAACa,GAAN,CAAUP,EAAV,CALnB;cAAA,UAOKC;YAPL,GACSD,EADT;cAAA;cAAA;cAAA;YAAA,QADJ;UAWH,CAbD;QAFR;UAAA;UAAA;UAAA;QAAA,QADJ,eAmBI;UAAK,SAAS,EAAC,YAAf;UAAA,UAEQD,QAAQ,CAACM,GAAT,CAAcC,SAAD,IAAe;YACxB,MAAM;cAAEN,EAAF;cAAME;YAAN,IAAkBI,SAAxB;YACA,oBACI;cAAA,UACKH,SAAS,KAAKH,EAAd,IAAoBE;YADzB,GAAQF,EAAR;cAAA;cAAA;cAAA;YAAA,QADJ;UAKH,CAPD;QAFR;UAAA;UAAA;UAAA;QAAA,QAnBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAsCH,CA9ED;;GAAMP,I;UAEUD,W;;;KAFVC,I;AAgFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}